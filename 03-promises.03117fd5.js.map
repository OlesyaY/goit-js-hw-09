{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAES,IAAIC,QAFTH,EAEiBI,IACjBC,YAAW,IAAMD,EAAQ,C,SAAEN,E,MAAUC,KAAUA,EAAM,EAIpC,CAACO,EAAGC,KACrBF,YAAW,IAAME,EAAO,C,SAAET,E,MAAUC,KAAUA,EAAM,E,CAZ7CS,SAASC,cAAc,QAuC/BC,iBAAiB,UAtBGC,IACvBA,EAAMC,iBAEN,MACEC,UAAUd,MAAEA,EAAKe,KAAEA,EAAIC,OAAEA,IACvBJ,EAAMK,cAEV,IAAIC,EAAaC,OAAOC,SAASpB,EAAMqB,OAEvC,IAAK,IAAIC,EAAI,EAAGA,GAAKN,EAAOK,MAAOC,IACjCxB,EAAcwB,EAAGJ,GACdK,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA4B,OAAOC,QAAQ,uBAAuB1B,QAAeC,MAAU,IAEhE0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA4B,OAAOG,QAAQ,sBAAsB5B,QAAeC,MAAU,IAGlEkB,GAAcC,OAAOC,SAASL,EAAKM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n    return new Promise(resolve => {\n      setTimeout(() => resolve({ position, delay }), delay);\n    });\n  } else {\n    // Reject\n    return new Promise((_, reject) => {\n      setTimeout(() => reject({ position, delay }), delay);\n    });\n  }\n}\n\nconst handleSubmitForm = event => {\n  event.preventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  let delayValue = Number.parseInt(delay.value);\n\n  for (let i = 1; i <= amount.value; i++) {\n    createPromise(i, delayValue)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delayValue += Number.parseInt(step.value);\n  }\n};\n\nform.addEventListener('submit', handleSubmitForm);\n"],"names":["$9EgcF","parcelRequire","$75aa520dfb7f3d3e$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","setTimeout","_","reject","document","querySelector","addEventListener","event","preventDefault","elements","step","amount","currentTarget","delayValue","Number","parseInt","value","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.03117fd5.js.map"}